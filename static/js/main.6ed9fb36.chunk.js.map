{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selected","clear","setState","addProducts","product","prevState","removeProducts","filter","element","buttonText","select","products","this","className","length","slice","join","map","includes","textButton","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,IAmBIC,E,4MACJC,MAAyB,CACvBC,SAAU,CAAC,Q,EAGbC,MAAQ,WACN,EAAKC,SAAS,CAAEF,SAAU,M,EAG5BG,YAAc,SAACC,GACb,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAC1BL,SAAS,GAAD,mBAAMK,EAAUL,UAAhB,CAA0BI,S,EAItCE,eAAiB,SAACF,GAChB,EAAKF,UAAS,SAAAG,GAAS,MAAK,CAC1BL,SAAUK,EAAUL,SAASO,QAAO,SAAAC,GAAO,OAAIA,IAAYJ,U,EAI/DK,WAAa,SAACC,EAAiBN,GAC7B,OAAOM,EACH,EAAKJ,eAAeF,GACpB,EAAKD,YAAYC,I,4CAGvB,WAAU,IA3CKO,EA2CN,OACCX,EAAaY,KAAKb,MAAlBC,SAER,OACE,sBAAKa,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,UAhDSF,EAiDEX,EAhDO,IAApBW,EAASG,OACJ,oBAGe,IAApBH,EAASG,OACL,GAAN,OAAUH,EAAS,GAAnB,gBAGI,GAAN,OAAUA,EAASI,MAAM,GAAI,GAAGC,KAAK,MAArC,gBAAkDL,EAASI,OAAO,GAAlE,oBA2CM,oBAAIF,UAAU,OAAd,SACGhB,EAAgBoB,KAAI,SAAAb,GACnB,IAAMM,EAASV,EAASkB,SAASd,GAC3Be,EAAaT,EAAS,SAAW,SAEvC,OACE,8BACE,qBAAkBG,UAAU,gBAA5B,UACGT,EACD,wBACEgB,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAM,EAAKZ,WAAWC,EAAQN,IAHzC,SAKGe,MAPIf,UAehBJ,EAASc,OAAS,GACjB,wBACED,UAAU,gBACVO,KAAK,SACLC,QAAST,KAAKX,MAHhB,0B,GA3DQqB,IAAMC,WAwETzB,ICrGf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6ed9fb36.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction message(products: string[]): string {\n  if (products.length === 0) {\n    return 'No goods selected';\n  }\n\n  if (products.length === 1) {\n    return `${products[0]} is selected`;\n  }\n\n  return `${products.slice(0, -1).join(', ')} and ${products.slice(-1)} are selected`;\n}\n\ntype State = {\n  selected: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selected: ['Jam'],\n  };\n\n  clear = () => {\n    this.setState({ selected: [] });\n  };\n\n  addProducts = (product: string) => {\n    this.setState(prevState => ({\n      selected: [...prevState.selected, product],\n    }));\n  };\n\n  removeProducts = (product: string) => {\n    this.setState(prevState => ({\n      selected: prevState.selected.filter(element => element !== product),\n    }));\n  };\n\n  buttonText = (select: boolean, product: string) => {\n    return select\n      ? this.removeProducts(product)\n      : this.addProducts(product);\n  };\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {message(selected)}\n        </h1>\n\n        <ul className=\"card\">\n          {goodsFromServer.map(product => {\n            const select = selected.includes(product);\n            const textButton = select ? 'Remove' : 'Select';\n\n            return (\n              <div>\n                <li key={product} className=\"card__product\">\n                  {product}\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.buttonText(select, product)}\n                  >\n                    {textButton}\n                  </button>\n                </li>\n              </div>\n            );\n          })}\n        </ul>\n\n        {selected.length > 0 && (\n          <button\n            className=\"button__clear\"\n            type=\"button\"\n            onClick={this.clear}\n          >\n            Clear\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}